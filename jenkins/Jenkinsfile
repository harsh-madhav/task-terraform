pipeline {
    agent any

    environment {
        REGISTRY = "registry.digitalocean.com/task-registry"   
        IMAGE_NAME = "flask-app"
        DOCKERFILE_PATH = "flask-project/Dockerfile"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'dev', 
                     url: 'https://github.com/harsh-madhav/task-terraform.git', 
                     credentialsId: 'git-credentials'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "/usr/local/bin/docker build -t ${REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER} -f ${DOCKERFILE_PATH} ."
                    docker.withRegistry("https://${REGISTRY}", 'docker-credentials') {
                        sh "/usr/local/bin/docker push ${REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER}"
                        sh "/usr/local/bin/docker tag ${REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER} ${REGISTRY}/${IMAGE_NAME}:latest"
                        sh "/usr/local/bin/docker push ${REGISTRY}/${IMAGE_NAME}:latest"
                    }
                }
            }
            post {
                failure {
                    echo "Docker build failed"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry("https://${REGISTRY}", "docker-credentials") {
                        dockerImage.push()
                        dockerImage.push("latest")
                    }
                }
            }
            post {
                always {
                    sh '/usr/local/bin/docker system prune -f'
                }
            }
        }
    }
}